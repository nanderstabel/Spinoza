{"message":"future cannot be sent between threads safely","code":null,"level":"error","spans":[{"file_name":"backend/src/views/account/create.rs","byte_start":325,"byte_end":328,"line_start":11,"line_end":11,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"future returned by `create` is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"within `impl Future<Output = impl IntoResponse>`, the trait `Send` is not implemented for `*mut u8`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"future is not `Send` as this value is used across an await","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":"await occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"backend/src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48829,"byte_end":48899,"line_start":1292,"line_end":1292,"column_start":17,"column_end":87,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":17,"highlight_end":87}],"label":"has type `gloo_timers::future::TimeoutFuture` which is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48905,"byte_end":48906,"line_start":1292,"line_end":1292,"column_start":93,"column_end":94,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":93,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `views::account::create::__axum_macros_check_create_future::check`","code":null,"level":"note","spans":[{"file_name":"backend/src/views/account/create.rs","byte_start":325,"byte_end":328,"line_start":11,"line_end":11,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"required by this bound in `views::account::create::__axum_macros_check_create_future::check`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: future cannot be sent between threads safely\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/create.rs:11:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfuture returned by `create` is not `Send`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: within `impl Future<Output = impl IntoResponse>`, the trait `Send` is not implemented for `*mut u8`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: future is not `Send` as this value is used across an await\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:87\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mawait occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhas type `gloo_timers::future::TimeoutFuture` which is not `Send`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:93\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `views::account::create::__axum_macros_check_create_future::check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/create.rs:11:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `views::account::create::__axum_macros_check_create_future::check`\u001b[0m\n\n"}
{"message":"future cannot be sent between threads safely","code":null,"level":"error","spans":[{"file_name":"backend/src/views/account/create.rs","byte_start":325,"byte_end":328,"line_start":11,"line_end":11,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"future returned by `create` is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Send` is not implemented for `(dyn FnMut() + 'static)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"future is not `Send` as this value is used across an await","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":"await occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"backend/src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48829,"byte_end":48899,"line_start":1292,"line_end":1292,"column_start":17,"column_end":87,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":17,"highlight_end":87}],"label":"has type `gloo_timers::future::TimeoutFuture` which is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48905,"byte_end":48906,"line_start":1292,"line_end":1292,"column_start":93,"column_end":94,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":93,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `views::account::create::__axum_macros_check_create_future::check`","code":null,"level":"note","spans":[{"file_name":"backend/src/views/account/create.rs","byte_start":325,"byte_end":328,"line_start":11,"line_end":11,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"required by this bound in `views::account::create::__axum_macros_check_create_future::check`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use parentheses to call this trait object","code":null,"level":"help","spans":[{"file_name":"backend/src/views/account/create.rs","byte_start":328,"byte_end":328,"line_start":11,"line_end":11,"column_start":4,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {","highlight_start":4,"highlight_end":4}],"label":null,"suggested_replacement":"()","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: future cannot be sent between threads safely\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/create.rs:11:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfuture returned by `create` is not `Send`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Send` is not implemented for `(dyn FnMut() + 'static)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: future is not `Send` as this value is used across an await\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:87\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mawait occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhas type `gloo_timers::future::TimeoutFuture` which is not `Send`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:93\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `views::account::create::__axum_macros_check_create_future::check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/create.rs:11:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn create(Storage(stronghold): Storage) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `views::account::create::__axum_macros_check_create_future::check`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call this trait object\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m async fn create(Storage(stronghold): Storage) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"future cannot be sent between threads safely","code":null,"level":"error","spans":[{"file_name":"backend/src/views/account/update.rs","byte_start":285,"byte_end":288,"line_start":14,"line_end":14,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"future returned by `update` is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"within `impl Future<Output = impl IntoResponse>`, the trait `Send` is not implemented for `*mut u8`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"future is not `Send` as this value is used across an await","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":"await occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"backend/src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48829,"byte_end":48899,"line_start":1292,"line_end":1292,"column_start":17,"column_end":87,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":17,"highlight_end":87}],"label":"has type `gloo_timers::future::TimeoutFuture` which is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48905,"byte_end":48906,"line_start":1292,"line_end":1292,"column_start":93,"column_end":94,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":93,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `__axum_macros_check_update_future::check`","code":null,"level":"note","spans":[{"file_name":"backend/src/views/account/update.rs","byte_start":285,"byte_end":288,"line_start":14,"line_end":14,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"required by this bound in `__axum_macros_check_update_future::check`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: future cannot be sent between threads safely\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/update.rs:14:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfuture returned by `update` is not `Send`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: within `impl Future<Output = impl IntoResponse>`, the trait `Send` is not implemented for `*mut u8`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: future is not `Send` as this value is used across an await\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:87\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mawait occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhas type `gloo_timers::future::TimeoutFuture` which is not `Send`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:93\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `__axum_macros_check_update_future::check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/update.rs:14:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `__axum_macros_check_update_future::check`\u001b[0m\n\n"}
{"message":"future cannot be sent between threads safely","code":null,"level":"error","spans":[{"file_name":"backend/src/views/account/update.rs","byte_start":285,"byte_end":288,"line_start":14,"line_end":14,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"future returned by `update` is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Send` is not implemented for `(dyn FnMut() + 'static)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"future is not `Send` as this value is used across an await","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":"await occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48899,"byte_end":48905,"line_start":1292,"line_end":1292,"column_start":87,"column_end":93,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"backend/src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48829,"byte_end":48899,"line_start":1292,"line_end":1292,"column_start":17,"column_end":87,"is_primary":false,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":17,"highlight_end":87}],"label":"has type `gloo_timers::future::TimeoutFuture` which is not `Send`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here","code":null,"level":"note","spans":[{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs","byte_start":48905,"byte_end":48906,"line_start":1292,"line_end":1292,"column_start":93,"column_end":94,"is_primary":true,"text":[{"text":"                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;","highlight_start":93,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `__axum_macros_check_update_future::check`","code":null,"level":"note","spans":[{"file_name":"backend/src/views/account/update.rs","byte_start":285,"byte_end":288,"line_start":14,"line_end":14,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {","highlight_start":1,"highlight_end":4}],"label":"required by this bound in `__axum_macros_check_update_future::check`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use parentheses to call this trait object","code":null,"level":"help","spans":[{"file_name":"backend/src/views/account/update.rs","byte_start":288,"byte_end":288,"line_start":14,"line_end":14,"column_start":4,"column_end":4,"is_primary":true,"text":[{"text":"pub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {","highlight_start":4,"highlight_end":4}],"label":null,"suggested_replacement":"()","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: future cannot be sent between threads safely\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/update.rs:14:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfuture returned by `update` is not `Send`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Send` is not implemented for `(dyn FnMut() + 'static)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: future is not `Send` as this value is used across an await\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:87\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mawait occurs here, with `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` maybe used later\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhas type `gloo_timers::future::TimeoutFuture` which is not `Send`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap())` is later dropped here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/iota-client-1.3.0/src/client.rs:1292:93\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                TimeoutFuture::new((interval.unwrap_or(5) * 1000).try_into().unwrap()).await;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `__axum_macros_check_update_future::check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/update.rs:14:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `__axum_macros_check_update_future::check`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call this trait object\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m async fn update(Storage(stronghold): Storage, Did(did): Did) -> impl IntoResponse {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"the trait bound `fn(storage::Storage) -> impl Future<Output = impl IntoResponse> {views::account::create::create}: Handler<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"backend/src/views/account/mod.rs","byte_start":244,"byte_end":258,"line_start":11,"line_end":11,"column_start":32,"column_end":46,"is_primary":true,"text":[{"text":"        .route(\"/create\", post(create::create))","highlight_start":32,"highlight_end":46}],"label":"the trait `Handler<_, _, _>` is not implemented for fn item `fn(storage::Storage) -> impl Future<Output = impl IntoResponse> {views::account::create::create}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"backend/src/views/account/mod.rs","byte_start":239,"byte_end":243,"line_start":11,"line_end":11,"column_start":27,"column_end":31,"is_primary":false,"text":[{"text":"        .route(\"/create\", post(create::create))","highlight_start":27,"highlight_end":31}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Handler<T, S, B2>` is implemented for `Layered<L, H, T, S, B, B2>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `post`","code":null,"level":"note","spans":[{"file_name":"backend/src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":4282,"byte_end":4298,"line_start":145,"line_end":145,"column_start":16,"column_end":32,"is_primary":true,"text":[{"text":"            H: Handler<T, S, B>,","highlight_start":16,"highlight_end":32}],"label":"required by this bound in `post`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":3843,"byte_end":4071,"line_start":129,"line_end":135,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        top_level_handler_fn!(","highlight_start":9,"highlight_end":31},{"text":"            #[doc = concat!(\"Route `\", stringify!($method) ,\"` requests to the given handler.\")]","highlight_start":1,"highlight_end":97},{"text":"            ///","highlight_start":1,"highlight_end":16},{"text":"            /// See [`get`] for an example.","highlight_start":1,"highlight_end":44},{"text":"            $name,","highlight_start":1,"highlight_end":19},{"text":"            $method","highlight_start":1,"highlight_end":20},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":12091,"byte_end":12124,"line_start":407,"line_end":407,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"top_level_handler_fn!(post, POST);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"top_level_handler_fn!","def_site_span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":2780,"byte_end":2813,"line_start":94,"line_end":94,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! top_level_handler_fn {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"top_level_handler_fn!","def_site_span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":2780,"byte_end":2813,"line_start":94,"line_end":94,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! top_level_handler_fn {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `fn(storage::Storage) -> impl Future<Output = impl IntoResponse> {views::account::create::create}: Handler<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/mod.rs:11:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .route(\"/create\", post(create::create))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Handler<_, _, _>` is not implemented for fn item `fn(storage::Storage) -> impl Future<Output = impl IntoResponse> {views::account::create::create}`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Handler<T, S, B2>` \u001b[0m\u001b[0m\u001b[1mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1mLayered<L, H, T, S, B, B2>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `post`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs:407:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtop_level_handler_fn!(post, POST);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `post`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `fn(storage::Storage, Did) -> impl Future<Output = impl IntoResponse> {views::account::update::update}: Handler<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"backend/src/views/account/mod.rs","byte_start":334,"byte_end":348,"line_start":13,"line_end":13,"column_start":32,"column_end":46,"is_primary":true,"text":[{"text":"        .route(\"/update\", post(update::update))","highlight_start":32,"highlight_end":46}],"label":"the trait `Handler<_, _, _>` is not implemented for fn item `fn(storage::Storage, Did) -> impl Future<Output = impl IntoResponse> {views::account::update::update}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"backend/src/views/account/mod.rs","byte_start":329,"byte_end":333,"line_start":13,"line_end":13,"column_start":27,"column_end":31,"is_primary":false,"text":[{"text":"        .route(\"/update\", post(update::update))","highlight_start":27,"highlight_end":31}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Handler<T, S, B2>` is implemented for `Layered<L, H, T, S, B, B2>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `post`","code":null,"level":"note","spans":[{"file_name":"backend/src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":4282,"byte_end":4298,"line_start":145,"line_end":145,"column_start":16,"column_end":32,"is_primary":true,"text":[{"text":"            H: Handler<T, S, B>,","highlight_start":16,"highlight_end":32}],"label":"required by this bound in `post`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":3843,"byte_end":4071,"line_start":129,"line_end":135,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        top_level_handler_fn!(","highlight_start":9,"highlight_end":31},{"text":"            #[doc = concat!(\"Route `\", stringify!($method) ,\"` requests to the given handler.\")]","highlight_start":1,"highlight_end":97},{"text":"            ///","highlight_start":1,"highlight_end":16},{"text":"            /// See [`get`] for an example.","highlight_start":1,"highlight_end":44},{"text":"            $name,","highlight_start":1,"highlight_end":19},{"text":"            $method","highlight_start":1,"highlight_end":20},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":12091,"byte_end":12124,"line_start":407,"line_end":407,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"top_level_handler_fn!(post, POST);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"top_level_handler_fn!","def_site_span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":2780,"byte_end":2813,"line_start":94,"line_end":94,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! top_level_handler_fn {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"top_level_handler_fn!","def_site_span":{"file_name":"/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs","byte_start":2780,"byte_end":2813,"line_start":94,"line_end":94,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! top_level_handler_fn {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `fn(storage::Storage, Did) -> impl Future<Output = impl IntoResponse> {views::account::update::update}: Handler<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbackend/src/views/account/mod.rs:13:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .route(\"/update\", post(update::update))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Handler<_, _, _>` is not implemented for fn item `fn(storage::Storage, Did) -> impl Future<Output = impl IntoResponse> {views::account::update::update}`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Handler<T, S, B2>` \u001b[0m\u001b[0m\u001b[1mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1mLayered<L, H, T, S, B, B2>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `post`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nstabel/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.3/src/routing/method_routing.rs:407:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtop_level_handler_fn!(post, POST);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `post`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
